# coding: utf-8

#
# vagrant-conoha
#
# プラグインの設定を行います。おもにConoHa APIに関するものです。
# コントロールパネルの「API」ページに必要情報があります。
# https://manage.conoha.jp/API/
#

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

VAGRANT_DEFAULT_PROVIDER = "vagrant-conoha"


### shell provisioning script ### =========================
$before_script_node1 = <<BF_SCRIPT

echo "config.ssh.pty = true"
/bin/sed -i 's/requiretty/!requiretty/' /etc/sudoers;
BF_SCRIPT


### shell provisioning script ### =========================
$script_node1 = <<SCRIPT
echo node1

sed -i -e '/HOSTNAME/d' /etc/sysconfig/network
echo 'HOSTNAME=node1.dev' >> /etc/sysconfig/network
hostname -f node1.dev

echo "I am node1 server provisining ..."
date > /root/vagrant_provisioned_at

    # config.vm.synced_folder "./share", "/vagrant_data", disabled: true, :create => true, :owner => 'vagrant', :group => 'vagrant'
    ########## config.vm.synced_folder "./source/node01.dev", "/var/www/test/node01.dev", :create => true, :owner => 'vagrant', :group => 'vagrant', :mount_options => ['dmode=777', 'fmode=666']
rsync -arv /vagrant_data/source/node01.dev /var/www/test/
    
mkdir -p /var/www/test/node01.dev/public_html
chown -R vagrant: /var/www/test/node01.dev/public_html

yum -y install yum-fastestmirror

yum -y install httpd

touch /etc/httpd/conf.d/00_vhost.conf
echo "NameVirtualHost *:80" >> /etc/httpd/conf.d/00_vhost.conf
touch /etc/httpd/conf.d/vhost-node1.dev.conf
echo "<VirtualHost *:80>" >> /etc/httpd/conf.d/vhost-node1.dev.conf
echo "  DocumentRoot /var/www/test/node01.dev/public_html" >> /etc/httpd/conf.d/vhost-node1.dev.conf
echo "</VirtualHost>" >> /etc/httpd/conf.d/vhost-node1.dev.conf

sed -i.bak 's/enabled=0/enabled=1/' /etc/yum.repos.d/epel-testing.repo

yum -y install php \
epel-release \
vim-enhanced \
php-cli \
php-common \
php-devel \
php-gd \
php-intl \
php-mbstring \
php-pdo \
php-pear.noarch \
php-xml \
php-mcrypt
cp -avf /etc/php.ini /etc/php.ini-ORIG
echo "date.timezone = Asia/Tokyo" >> /etc/php.ini
echo "<?php" > /var/www/test/node01.dev/public_html/index.php
echo "  echo 'this is node1.dev host\n';" >> /var/www/test/node01.dev/public_html/index.php
echo "  phpinfo();" >> /var/www/test/node01.dev/public_html/index.php

chkconfig httpd on
service httpd start

service httpd reload

SCRIPT
### ### =================================



Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # vagrantがSSH接続する際のユーザ名を指定します。
  config.ssh.username = 'root'

  # CentOS系など/etc/sudoersにrequirettyが書いてある場合に必要になります。
  config.ssh.pty      = true

  config.vm.provider :conoha do |conoha|
    ########## config.vm.synced_folder "./share", "/vagrant_data", disabled: true, :create => true, :owner => 'vagrant', :group => 'vagrant'
    ########## config.vm.synced_folder "./source/node01.dev", "/var/www/test/node01.dev", :create => true, :owner => 'vagrant', :group => 'vagrant', :mount_options => ['dmode=777', 'fmode=666']

    # IdentityEndpointを指定します
    # 東京以外のリージョンを利用する場合は変更して下さい。
    ## conoha.openstack_auth_url = 'https://identity.tyo1.conoha.io/v2.0'
    conoha.openstack_auth_url = "#{ENV['OS_AUTH_URL']}"

    # APIユーザ名、APIパスワード、テナント名を指定します。
    # APIユーザー名はgncu、テナント名はgnctなので注意して下さい。
    conoha.username           = "#{ENV['OS_USERNAME']}"
    conoha.password           = "#{ENV['OS_PASSWORD']}"
    conoha.tenant_name        = "#{ENV['OS_TENANT_NAME']}"
    ## conoha.username           = 'gncu*******'
    ## conoha.password           = '***********'
    ## conoha.tenant_name        = 'gnct*******'

    # VPSのスペックを指定します(g-1gbの場合は1GBプランになります)。
    # 2017/02/23現在、以下のプランが利用可能です。
    #
    # g-512mb
    # g-1gb
    # g-2gb
    # g-4gb
    # g-8gb
    # g-16gb
    # g-32gb
    # g-64gb
    #
    # 最新のプラン一覧はvagrantのopenstackサブコマンドで取得できます。
    # 以下のコマンドを実行して下さい。
    #
    # $ vagrant openstack flavor-list
    #
    conoha.flavor             = 'g-1gb'

    # VPSのイメージを指定します。
    # 最新のイメージ一覧は、vagrantのopenstackサブコマンドで取得できます。
    # 以下のコマンドを実行してください。
    #
    # $ vagrant openstack image-list
    #
    ## conoha.image              = 'vmi-ubuntu-16.04-amd64-unified'
    conoha.image              = 'vmi-centos-6.9-amd64'

    # リージョンを指定します。
    # 東京(tyo1)、シンガポール(sin1)、アメリカ(sjc1)から指定して下さい。
    #
    # conoha.openstack_auth_urlも忘れずに変更して下さい。
    ## conoha.region             = "tyo1"
    conoha.region             = "#{ENV['OS_REGION_NAME']}"

    # VPSのrootパスワードを設定します。
    #
    # 空文字の場合はパスワードは設定されません
    # その場合コンソールログインは不可になります(SSHの公開鍵認証はログイン可能)
    ## conoha.admin_pass         = ""
    conoha.admin_pass         = "AdminPass2983*"

    # VPSのネームタグを指定します。
    # コントロールパネル上に表示される名前です。
    conoha.metadata           = {
      instance_name_tag: "vagrant_web_ce69"
    }

    # セキュリティグループを指定します。
    #
    # NOTE: 一度もコントロールパネルからVPSを作成したことがない場合、
    #       以下のセキュリティグループが無いためエラーになることがあります。
    #       その場合は、コントロールパネルからVPSを作成して、すぐ削除して
    #       その後、このプラグインを試して下さい。
    conoha.security_groups    = [
      "default",
      "gncs-ipv4-all",
      "gncs-ipv6-all"
    ]

    # SSH公開鍵を指定します。
    # コントロールパネルの「SSH Key」にある名前を指定して下さい。
    # config.ssh.private_key_pathもともに指定する必要があります。
    #
    # 指定が無い場合は、Vagrantが新しい鍵ペアを自動作成します。
    #
    # conoha.keypair_name       = "my-keypair"
    conoha.keypair_name       = "my-local-key"

    config.ssh.private_key_path = "~/.ssh/id_rsa"
    config.ssh.pty = true
    # スタートアップスクリプトを指定します。
    # cloud-config形式、シェルスクリプト形式、どちらでも記述できます。
    # Base64エンコードする必要はありません。
    #
    # 詳細は下記URLを参考にしてください。
    # https://www.conoha.jp/guide/startupscript.php
    #
    # conoha.user_data = ""
    conoha.user_data = "./init_cloud.sh"

    ## root shell := privileged: true
    ## config.vm.provision :shell, privileged: true, :inline => $before_script_node1
    ##
    config.vm.provision :shell, privileged: true, :inline => $script_node1
  end

  # すでにSSH公開鍵をコントロールパネルに登録している場合は、
  # ここで秘密鍵のパスを指定します。
  # keypair_nameとともに指定します。
  #
  # config.ssh.private_key_path = "~/.ssh/id_rsa"
end
